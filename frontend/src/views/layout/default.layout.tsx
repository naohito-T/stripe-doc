'use client';
import type { Metadata } from 'next';
// import { useRouter } from 'next/router';
import { usePathname } from 'next/navigation';
import Link from 'next/link';
import { Disclosure, DisclosurePanel, DisclosureButton } from '@headlessui/react';
import { Inter } from 'next/font/google';
import { ThemeProvider } from 'next-themes';
import cx from 'classnames';
import './globals.css';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const navigation = [
  { name: 'ÂïÜÂìÅ„ÅÆË≤©Â£≤', href: '/payments' },
  { name: '„Çµ„Éñ„Çπ„ÇØ„É™„Éó„Ç∑„Éß„É≥', href: '/billing' },
  { name: '„Éû„Éº„Ç±„ÉÉ„Éà„Éó„É¨„Ç§„Çπ', href: '/connect' },
];

export const defaultLayout = ({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) => {
  const pathname = usePathname();
  const isCurrent = (item: (typeof navigation)[number]) => {
    return item.href === pathname;
  };

  return (
    <html lang='ja'>
      <body className={inter.className}>
        <ThemeProvider attribute='class' defaultTheme='light' enableColorScheme={false}>
          <Disclosure as='nav' className='bg-indigo-600 dark:bg-slate-800'>
            {({ open }) => (
              <>
                <div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8'>
                  <div className='flex items-center justify-between h-16'>
                    <div className='flex items-center'>
                      <p className='flex-shrink-0 text-white'>
                        <span className='font-bold text-xl'>Stripe</span>
                        <span className='text-sm ml-1 opacity-80'>„Éì„ÇÆ„Éä„Éº„Ç∫„Ç¨„Ç§„Éâüî∞</span>
                      </p>
                      <div className='hidden md:block'>
                        <div className='ml-10 flex items-baseline space-x-4'>
                          {navigation.map((item) => (
                            <Link
                              key={item.name}
                              href={item.href}
                              className={cx(
                                isCurrent(item)
                                  ? 'bg-indigo-700 text-white'
                                  : 'text-white hover:bg-indigo-500 hover:bg-opacity-75',
                                'px-3 py-2 rounded-md text-sm font-medium'
                              )}
                              aria-current={isCurrent(item) ? 'page' : undefined}
                            >
                              {item.name}
                            </Link>
                          ))}
                        </div>
                      </div>
                    </div>
                    <div className='hidden md:block'>
                      <div className='ml-4 flex space-x-4 items-center md:ml-6'>
                        {/* <ThemeSwitch /> */}
                        <a
                          href='https://github.com/dninomiya/stripe-doc'
                          target='_blank'
                          rel='noreferrer'
                        >
                          {/* <Github className='text-indigo-200' /> */}
                        </a>
                      </div>
                    </div>
                    <div className='-mr-2 flex md:hidden'>
                      {/* Mobile menu button */}
                      <DisclosureButton className='bg-indigo-600 inline-flex items-center justify-center p-2 rounded-md text-indigo-200 hover:text-white hover:bg-indigo-500 hover:bg-opacity-75 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white'>
                        <span className='sr-only'>Open main menu</span>
                        {/* {open ? (
                          <XIcon className='block h-6 w-6' aria-hidden='true' />
                        ) : (
                          <MenuIcon className='block h-6 w-6' aria-hidden='true' />
                        )} */}
                      </DisclosureButton>
                    </div>
                  </div>
                </div>

                <DisclosurePanel className='md:hidden'>
                  <div className='px-2 pt-2 pb-3 space-y-1 sm:px-3'>
                    {navigation.map((item) => (
                      <DisclosureButton
                        key={item.name}
                        // href={item.href}
                        className={cx(
                          isCurrent(item)
                            ? 'bg-indigo-700 text-white'
                            : 'text-white hover:bg-indigo-500 hover:bg-opacity-75',
                          'block px-3 py-2 rounded-md text-base font-medium'
                        )}
                        aria-current={isCurrent(item) ? 'page' : undefined}
                      >
                        {item.name}
                      </DisclosureButton>
                    ))}
                  </div>
                </DisclosurePanel>
              </>
            )}
          </Disclosure>
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
};
